{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","selectTodo","selectedTodoId","className","map","id","title","completed","classNames","type","onClick","TodoFilter","value","setFilterValue","text","setFilterText","onChange","event","currentTarget","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoId","currentTodo","find","todo","useState","user","setUser","useEffect","loadUser","a","userId","response","href","email","name","checkTitle","filterText","toLowerCase","includes","App","setTodos","setSelectedTodoId","loading","setLoading","filterValue","loadTodos","filterTodos","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.049fc55a.chunk.js","sourcesContent":["export enum FilterType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (arg: number) => number | void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }) => {\n          const handleSelect = () => {\n            return selectedTodoId === id ? selectTodo(0) : selectTodo(id);\n          };\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': completed,\n                  'has-text-success': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleSelect}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye': selectedTodoId !== id,\n                      'far fa-eye-slash': selectedTodoId === id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { FilterType } from '../../types/Filter';\n\ntype Props = {\n  value: FilterType;\n  setFilterValue: (arg: FilterType) => void;\n  text: string;\n  setFilterText: (arg: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  setFilterValue,\n  text,\n  setFilterText,\n}) => {\n  const handleValueChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterValue(event.currentTarget.value as FilterType);\n  };\n\n  const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setFilterText(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={handleValueChange}\n          >\n            <option value={FilterType.All}>All</option>\n            <option value={FilterType.Active}>Active</option>\n            <option value={FilterType.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={text}\n          onChange={handleTextChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {text !== '' && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setFilterText('')}\n                aria-label=\"Clear search\"\n              />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectTodo: (arg: number) => number | void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoId,\n  todos,\n  selectTodo,\n}) => {\n  const currentTodo = todos.find((todo) => todo.id === todoId);\n  const [user, setUser] = useState<User | null>(null);\n  // const [todoOpen, setTodoOpen] = useState(true);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      if (currentTodo) {\n        const response = await getUser(currentTodo.userId);\n\n        setUser(response);\n      }\n    };\n\n    loadUser();\n\n  }, []);\n\n  const hadlerClick = () => {\n    selectTodo(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close\"\n              onClick={hadlerClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!currentTodo?.completed\n                ? (<strong className=\"has-text-danger\">Planned</strong>)\n                : (<strong className=\"has-text-success\">Done</strong>)}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/Filter';\n\nexport const checkTitle = (title: string, filterText: string) => {\n  return title.toLowerCase().includes(filterText.toLowerCase());\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [filterValue, setFilterValue] = useState(FilterType.All);\n  const [filterText, setFilterText] = useState('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const response = await getTodos();\n\n      setLoading (false);\n      setTodos(response);\n    };\n\n    loadTodos();\n  }, []);\n\n  const filterTodos = todos.filter(({title, completed}) => {\n    switch (filterValue) {\n      case FilterType.Active:\n        return !completed && checkTitle(title, filterText);\n\n      case FilterType.Completed:\n        return completed && checkTitle(title, filterText);\n\n      default:\n        return checkTitle(title, filterText);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={filterValue}\n                text={filterText}\n                setFilterValue={setFilterValue}\n                setFilterText={setFilterText}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filterTodos}\n                  selectTodo = {(todo) => setSelectedTodoId(todo)}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId !== 0 && (\n        <TodoModal\n          todoId={selectedTodoId}\n          todos={todos}\n          selectTodo={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}